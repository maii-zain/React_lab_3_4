{"ast":null,"code":"var _jsxFileName = \"/home/mai/Desktop/React/l3/src/Components/Nav.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OffCanvasExample({\n  name,\n  ...props\n}) {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      className: \"me-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(OffCanvasExample, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = OffCanvasExample;\nfunction Example() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['start', 'end', 'top', 'bottom'].map((placement, idx) => /*#__PURE__*/_jsxDEV(OffCanvasExample, {\n      placement: placement,\n      name: placement\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_c2 = Example;\nrender( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 8\n}, this));\nvar _c, _c2;\n$RefreshReg$(_c, \"OffCanvasExample\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"names":["useState","Button","Offcanvas","jsxDEV","_jsxDEV","Fragment","_Fragment","OffCanvasExample","name","props","_s","show","setShow","handleClose","handleShow","children","variant","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onHide","Header","closeButton","Title","Body","_c","Example","map","placement","idx","_c2","render","$RefreshReg$"],"sources":["/home/mai/Desktop/React/l3/src/Components/Nav.js"],"sourcesContent":["import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nfunction OffCanvasExample({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\n        {name}\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nfunction Example() {\n  return (\n    <>\n      {['start', 'end', 'top', 'bottom'].map((placement, idx) => (\n        <OffCanvasExample key={idx} placement={placement} name={placement} />\n      ))}\n    </>\n  );\n}\n\nrender(<Example />);"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,gBAAgBA,CAAC;EAAEC,IAAI;EAAE,GAAGC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMa,WAAW,GAAGA,CAAA,KAAMD,OAAO,CAAC,KAAK,CAAC;EACxC,MAAME,UAAU,GAAGA,CAAA,KAAMF,OAAO,CAAC,IAAI,CAAC;EAEtC,oBACER,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACH,MAAM;MAACe,OAAO,EAAC,SAAS;MAACC,OAAO,EAAEH,UAAW;MAACI,SAAS,EAAC,MAAM;MAAAH,QAAA,EAC5DP;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACTlB,OAAA,CAACF,SAAS;MAACS,IAAI,EAAEA,IAAK;MAACY,MAAM,EAAEV,WAAY;MAAA,GAAKJ,KAAK;MAAAM,QAAA,gBACnDX,OAAA,CAACF,SAAS,CAACsB,MAAM;QAACC,WAAW;QAAAV,QAAA,eAC3BX,OAAA,CAACF,SAAS,CAACwB,KAAK;UAAAX,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACnBlB,OAAA,CAACF,SAAS,CAACyB,IAAI;QAAAZ,QAAA,EAAC;MAGhB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA,eACZ,CAAC;AAEP;AAACZ,EAAA,CAtBQH,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AAwBzB,SAASsB,OAAOA,CAAA,EAAG;EACjB,oBACEzB,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACG,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAACe,GAAG,CAAC,CAACC,SAAS,EAAEC,GAAG,kBACpD5B,OAAA,CAACG,gBAAgB;MAAWwB,SAAS,EAAEA,SAAU;MAACvB,IAAI,EAAEuB;IAAU,GAA3CC,GAAG;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CACrE;EAAC,gBACF,CAAC;AAEP;AAACW,GAAA,GARQJ,OAAO;AAUhBK,MAAM,eAAC9B,OAAA,CAACyB,OAAO;EAAAV,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAM,EAAA,EAAAK,GAAA;AAAAE,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}